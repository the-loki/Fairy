<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classtf_1_1Node" kind="class" language="C++" prot="private">
    <compoundname>tf::Node</compoundname>
    <innerclass refid="structtf_1_1Node_1_1Async" prot="private">tf::Node::Async</innerclass>
    <innerclass refid="structtf_1_1Node_1_1Condition" prot="private">tf::Node::Condition</innerclass>
    <innerclass refid="structtf_1_1Node_1_1DependentAsync" prot="private">tf::Node::DependentAsync</innerclass>
    <innerclass refid="structtf_1_1Node_1_1Dynamic" prot="private">tf::Node::Dynamic</innerclass>
    <innerclass refid="structtf_1_1Node_1_1Module" prot="private">tf::Node::Module</innerclass>
    <innerclass refid="structtf_1_1Node_1_1MultiCondition" prot="private">tf::Node::MultiCondition</innerclass>
    <innerclass refid="structtf_1_1Node_1_1Semaphores" prot="private">tf::Node::Semaphores</innerclass>
    <innerclass refid="structtf_1_1Node_1_1Static" prot="private">tf::Node::Static</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classtf_1_1Node_1a9218d33e5a97519896c687bc2581d4bc" prot="private" static="no" strong="yes">
        <type>int</type>
        <name>AsyncState</name>
        <qualifiedname>tf::Node::AsyncState</qualifiedname>
        <enumvalue id="classtf_1_1Node_1a9218d33e5a97519896c687bc2581d4bca6f8eb84e55e2f1c21cb428ae5b644a6e" prot="private">
          <name>UNFINISHED</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtf_1_1Node_1a9218d33e5a97519896c687bc2581d4bcaaeff3f3f2731681b2ed6a27786a56203" prot="private">
          <name>LOCKED</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classtf_1_1Node_1a9218d33e5a97519896c687bc2581d4bca2c616b2713e2e0aed04b4c4752c88133" prot="private">
          <name>FINISHED</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="502" column="3" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="502" bodyend="506"/>
      </memberdef>
      <memberdef kind="typedef" id="classtf_1_1Node_1a8c001eed6bd8ac9bd348c2f710f9e0b1" prot="private" static="no">
        <type>std::monostate</type>
        <definition>using tf::Node::Placeholder =  std::monostate</definition>
        <argsstring></argsstring>
        <name>Placeholder</name>
        <qualifiedname>tf::Node::Placeholder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="516" column="3" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="516" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classtf_1_1Node_1a82806fcf9c98e784331b93f47010aefa" prot="private" static="no">
        <type>std::variant&lt; Placeholder, Static, Dynamic, Condition, MultiCondition, Module, Async, DependentAsync &gt;</type>
        <definition>using tf::Node::handle_t =  std::variant&lt; Placeholder, Static, Dynamic, Condition, MultiCondition, Module, Async, DependentAsync &gt;</definition>
        <argsstring></argsstring>
        <name>handle_t</name>
        <qualifiedname>tf::Node::handle_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="590" column="3" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="599" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtf_1_1Node_1afab89afd724f1b07b1aaad6bdc61c47a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Graph</definition>
        <argsstring></argsstring>
        <name>Graph</name>
        <qualifiedname>tf::Node::Graph</qualifiedname>
        <param>
          <type><ref refid="classtf_1_1Graph" kindref="compound">Graph</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="493" column="16" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtf_1_1Node_1aaa7728226b6ce66782e8816b1658dd9a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Task</definition>
        <argsstring></argsstring>
        <name>Task</name>
        <qualifiedname>tf::Node::Task</qualifiedname>
        <param>
          <type><ref refid="classtf_1_1Task" kindref="compound">Task</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="494" column="16" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtf_1_1Node_1a0aa0e12e4a0ba023033e808fb2132fdf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class TaskView</definition>
        <argsstring></argsstring>
        <name>TaskView</name>
        <qualifiedname>tf::Node::TaskView</qualifiedname>
        <param>
          <type><ref refid="classtf_1_1TaskView" kindref="compound">TaskView</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="495" column="16" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtf_1_1Node_1af043dd6f6a359602805d9c7dd7539cca" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Taskflow</definition>
        <argsstring></argsstring>
        <name>Taskflow</name>
        <qualifiedname>tf::Node::Taskflow</qualifiedname>
        <param>
          <type><ref refid="classtf_1_1Taskflow" kindref="compound">Taskflow</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="496" column="16" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="496" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtf_1_1Node_1a763b2f90bc53f92d680a635fe28e858e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Executor</definition>
        <argsstring></argsstring>
        <name>Executor</name>
        <qualifiedname>tf::Node::Executor</qualifiedname>
        <param>
          <type><ref refid="classtf_1_1Executor" kindref="compound">Executor</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="497" column="16" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="497" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtf_1_1Node_1a61184f9bd9c801d0a5eccecfdbddc641" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class FlowBuilder</definition>
        <argsstring></argsstring>
        <name>FlowBuilder</name>
        <qualifiedname>tf::Node::FlowBuilder</qualifiedname>
        <param>
          <type><ref refid="classtf_1_1FlowBuilder" kindref="compound">FlowBuilder</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="498" column="16" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtf_1_1Node_1aa48945297ede77a161defc88033ce8a6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Subflow</definition>
        <argsstring></argsstring>
        <name>Subflow</name>
        <qualifiedname>tf::Node::Subflow</qualifiedname>
        <param>
          <type><ref refid="classtf_1_1Subflow" kindref="compound">Subflow</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="499" column="16" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classtf_1_1Node_1af3d14e26ba8af9e6cc5a32aad8446de7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Runtime</definition>
        <argsstring></argsstring>
        <name>Runtime</name>
        <qualifiedname>tf::Node::Runtime</qualifiedname>
        <param>
          <type><ref refid="classtf_1_1Runtime" kindref="compound">Runtime</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="500" column="16" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="500" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtf_1_1Node_1aa78ccd142a22698289c2c823bfa14241" prot="private" static="no" mutable="no">
        <type></type>
        <definition>tf::Node::TF_ENABLE_POOLABLE_ON_THIS</definition>
        <argsstring></argsstring>
        <name>TF_ENABLE_POOLABLE_ON_THIS</name>
        <qualifiedname>tf::Node::TF_ENABLE_POOLABLE_ON_THIS</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="508" column="3" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="508" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a4a022f2346fe70d56910bd4108dd0e05" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/string/basic_string" kindref="compound" external="/Users/twhuang/Code/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::string</ref></type>
        <definition>std::string tf::Node::_name</definition>
        <argsstring></argsstring>
        <name>_name</name>
        <qualifiedname>tf::Node::_name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="634" column="15" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="634" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a97240d40fe462ab1df97aee10a966965" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned tf::Node::_priority</definition>
        <argsstring></argsstring>
        <name>_priority</name>
        <qualifiedname>tf::Node::_priority</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="636" column="12" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="636" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1ae771748b9bb4f9a01116ddbc31f7bc2d" prot="private" static="no" mutable="no">
        <type>Topology *</type>
        <definition>Topology* tf::Node::_topology</definition>
        <argsstring></argsstring>
        <name>_topology</name>
        <qualifiedname>tf::Node::_topology</qualifiedname>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="638" column="12" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="638" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a20e0970afa16e43872a9a2f8839e9540" prot="private" static="no" mutable="no">
        <type>Node *</type>
        <definition>Node* tf::Node::_parent</definition>
        <argsstring></argsstring>
        <name>_parent</name>
        <qualifiedname>tf::Node::_parent</qualifiedname>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="639" column="8" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="639" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a5458c5905ee4b28b70f368a522c198f2" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* tf::Node::_data</definition>
        <argsstring></argsstring>
        <name>_data</name>
        <qualifiedname>tf::Node::_data</qualifiedname>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="641" column="8" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="641" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a45a3783b67e19091d8e02e5ab56c6b63" prot="private" static="no" mutable="no">
        <type><ref refid="classtf_1_1SmallVector" kindref="compound">SmallVector</ref>&lt; Node * &gt;</type>
        <definition>SmallVector&lt;Node*&gt; tf::Node::_successors</definition>
        <argsstring></argsstring>
        <name>_successors</name>
        <qualifiedname>tf::Node::_successors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="643" column="15" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="643" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a4f549abd6361156430572e57a1f89aec" prot="private" static="no" mutable="no">
        <type><ref refid="classtf_1_1SmallVector" kindref="compound">SmallVector</ref>&lt; Node * &gt;</type>
        <definition>SmallVector&lt;Node*&gt; tf::Node::_dependents</definition>
        <argsstring></argsstring>
        <name>_dependents</name>
        <qualifiedname>tf::Node::_dependents</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="644" column="15" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="644" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a19bbe02799273a6df9b639d22813f83c" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/atomic/atomic" kindref="compound" external="/Users/twhuang/Code/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::atomic</ref>&lt; int &gt;</type>
        <definition>std::atomic&lt;int&gt; tf::Node::_state</definition>
        <argsstring></argsstring>
        <name>_state</name>
        <qualifiedname>tf::Node::_state</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="646" column="15" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="646" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a58f07ec0fb20050fe1d9845ac1d897f6" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/atomic/atomic" kindref="compound" external="/Users/twhuang/Code/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::atomic</ref>&lt; size_t &gt;</type>
        <definition>std::atomic&lt;size_t&gt; tf::Node::_join_counter</definition>
        <argsstring></argsstring>
        <name>_join_counter</name>
        <qualifiedname>tf::Node::_join_counter</qualifiedname>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="647" column="15" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="647" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a26a8c9bfbbd1c62dbd49545d9d49a8f4" prot="private" static="no" mutable="no">
        <type><ref refid="cpp/memory/unique_ptr" kindref="compound" external="/Users/twhuang/Code/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::unique_ptr</ref>&lt; Semaphores &gt;</type>
        <definition>std::unique_ptr&lt;Semaphores&gt; tf::Node::_semaphores</definition>
        <argsstring></argsstring>
        <name>_semaphores</name>
        <qualifiedname>tf::Node::_semaphores</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="649" column="19" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="649" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a83b494fd50500454e9fb1b8afe8fc65c" prot="private" static="no" mutable="no">
        <type>handle_t</type>
        <definition>handle_t tf::Node::_handle</definition>
        <argsstring></argsstring>
        <name>_handle</name>
        <qualifiedname>tf::Node::_handle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="651" column="12" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="651" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classtf_1_1Node_1a0d3630fde1342f7efe101fbd112c70a6" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int tf::Node::CONDITIONED</definition>
        <argsstring></argsstring>
        <name>CONDITIONED</name>
        <qualifiedname>tf::Node::CONDITIONED</qualifiedname>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="511" column="24" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="511" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1acd2a865b64c7b0feea62f0f50c7116fb" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int tf::Node::DETACHED</definition>
        <argsstring></argsstring>
        <name>DETACHED</name>
        <qualifiedname>tf::Node::DETACHED</qualifiedname>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="512" column="24" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="512" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a9d5bb66653a9429effed9f13dc7f1603" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int tf::Node::ACQUIRED</definition>
        <argsstring></argsstring>
        <name>ACQUIRED</name>
        <qualifiedname>tf::Node::ACQUIRED</qualifiedname>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="513" column="24" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1ab1ef24ce96fb092597e645f65cc7406a" prot="private" static="yes" constexpr="yes" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int tf::Node::READY</definition>
        <argsstring></argsstring>
        <name>READY</name>
        <qualifiedname>tf::Node::READY</qualifiedname>
        <initializer>= 8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="514" column="24" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="514" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classtf_1_1Node_1a53c0636f3e9f8473e564134495a4a615" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto tf::Node::PLACEHOLDER</definition>
        <argsstring></argsstring>
        <name>PLACEHOLDER</name>
        <qualifiedname>tf::Node::PLACEHOLDER</qualifiedname>
        <initializer>= get_index_v&lt;Placeholder, handle_t&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="609" column="25" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="609" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a2ac09057e2116247343ab716dd7788b0" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto tf::Node::STATIC</definition>
        <argsstring></argsstring>
        <name>STATIC</name>
        <qualifiedname>tf::Node::STATIC</qualifiedname>
        <initializer>= get_index_v&lt;Static, handle_t&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="610" column="25" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="610" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a6b0ac6a07fe2f44d358c1aeb1479a3c5" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto tf::Node::DYNAMIC</definition>
        <argsstring></argsstring>
        <name>DYNAMIC</name>
        <qualifiedname>tf::Node::DYNAMIC</qualifiedname>
        <initializer>= get_index_v&lt;Dynamic, handle_t&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="611" column="25" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="611" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a4b49adbdfc96dddb4e3053f171254a2a" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto tf::Node::CONDITION</definition>
        <argsstring></argsstring>
        <name>CONDITION</name>
        <qualifiedname>tf::Node::CONDITION</qualifiedname>
        <initializer>= get_index_v&lt;Condition, handle_t&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="612" column="25" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="612" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1aaf76a24c53ace59d03fd01b496112e05" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto tf::Node::MULTI_CONDITION</definition>
        <argsstring></argsstring>
        <name>MULTI_CONDITION</name>
        <qualifiedname>tf::Node::MULTI_CONDITION</qualifiedname>
        <initializer>= get_index_v&lt;MultiCondition, handle_t&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="613" column="25" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="613" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a2d7a32811951bc382d473d36d34ae66c" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto tf::Node::MODULE</definition>
        <argsstring></argsstring>
        <name>MODULE</name>
        <qualifiedname>tf::Node::MODULE</qualifiedname>
        <initializer>= get_index_v&lt;Module, handle_t&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="614" column="25" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="614" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1a94a2a7c35bacc662a45912d0dfedff09" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto tf::Node::ASYNC</definition>
        <argsstring></argsstring>
        <name>ASYNC</name>
        <qualifiedname>tf::Node::ASYNC</qualifiedname>
        <initializer>= get_index_v&lt;Async, handle_t&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="615" column="25" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="615" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtf_1_1Node_1abfa56b6169772e984e4893380666817d" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto tf::Node::DEPENDENT_ASYNC</definition>
        <argsstring></argsstring>
        <name>DEPENDENT_ASYNC</name>
        <qualifiedname>tf::Node::DEPENDENT_ASYNC</qualifiedname>
        <initializer>= get_index_v&lt;DependentAsync, handle_t&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="616" column="25" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="616" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtf_1_1Node_1aebc4701caf53db89d260c75fba0e5050" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>tf::Node::Node</definition>
        <argsstring>()=default</argsstring>
        <name>Node</name>
        <qualifiedname>tf::Node::Node</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="618" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Node_1a7d0d7f09aa1f2fd4d5ec727d91c0c3ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>tf::Node::Node</definition>
        <argsstring>(const std::string &amp;, unsigned, Topology *, Node *, size_t, Args &amp;&amp;... args)</argsstring>
        <name>Node</name>
        <qualifiedname>tf::Node::Node</qualifiedname>
        <param>
          <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/Users/twhuang/Code/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
          <defname>name</defname>
        </param>
        <param>
          <type>unsigned</type>
          <defname>priority</defname>
        </param>
        <param>
          <type>Topology *</type>
          <defname>topology</defname>
        </param>
        <param>
          <type>Node *</type>
          <defname>parent</defname>
        </param>
        <param>
          <type>size_t</type>
          <defname>join_counter</defname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="621" column="3" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="741" bodyend="755"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Node_1a65026753fe6eaf5c4c904b4437aeecef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>tf::Node::~Node</definition>
        <argsstring>()</argsstring>
        <name>~Node</name>
        <qualifiedname>tf::Node::~Node</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="623" column="3" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="761" bodyend="798"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Node_1a7133911e093d82e5f5edd73124b60c6a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tf::Node::num_successors</definition>
        <argsstring>() const</argsstring>
        <name>num_successors</name>
        <qualifiedname>tf::Node::num_successors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="625" column="10" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="807" bodyend="809"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Node_1abbb6a85cc8f62682ce8c78ad9851c0e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tf::Node::num_dependents</definition>
        <argsstring>() const</argsstring>
        <name>num_dependents</name>
        <qualifiedname>tf::Node::num_dependents</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="626" column="10" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="812" bodyend="814"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Node_1ad5eb7ac6418e89fccc300986b216510c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tf::Node::num_strong_dependents</definition>
        <argsstring>() const</argsstring>
        <name>num_strong_dependents</name>
        <qualifiedname>tf::Node::num_strong_dependents</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="627" column="10" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="829" bodyend="838"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Node_1a7dbe963f0173062f3a6164f1ff581c5a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t tf::Node::num_weak_dependents</definition>
        <argsstring>() const</argsstring>
        <name>num_weak_dependents</name>
        <qualifiedname>tf::Node::num_weak_dependents</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="628" column="10" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="817" bodyend="826"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Node_1a0214bc98366d4c24a1cae941cdffe119" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="cpp/string/basic_string" kindref="compound" external="/Users/twhuang/Code/taskflow/doxygen/cppreference-doxygen-web.tag.xml">std::string</ref> &amp;</type>
        <definition>const std::string &amp; tf::Node::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <qualifiedname>tf::Node::name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="630" column="21" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="841" bodyend="843"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtf_1_1Node_1a7e6ccc13774475f9ee23af8d37a5311c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tf::Node::_precede</definition>
        <argsstring>(Node *)</argsstring>
        <name>_precede</name>
        <qualifiedname>tf::Node::_precede</qualifiedname>
        <param>
          <type>Node *</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="653" column="8" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="801" bodyend="804"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Node_1a30ffac5296d61687b8ebb9ff4716a26a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void tf::Node::_set_up_join_counter</definition>
        <argsstring>()</argsstring>
        <name>_set_up_join_counter</name>
        <qualifiedname>tf::Node::_set_up_join_counter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="654" column="8" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="857" bodyend="869"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Node_1a4207c300c6ac0c564deef65c73e1ee96" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tf::Node::_is_cancelled</definition>
        <argsstring>() const</argsstring>
        <name>_is_cancelled</name>
        <qualifiedname>tf::Node::_is_cancelled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="656" column="8" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="852" bodyend="854"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Node_1aed1c802d5794f881f9c47089003ef62c" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tf::Node::_is_conditioner</definition>
        <argsstring>() const</argsstring>
        <name>_is_conditioner</name>
        <qualifiedname>tf::Node::_is_conditioner</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="657" column="8" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="846" bodyend="849"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Node_1ac5778a60afb44cd54eb0247a04b38a91" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool tf::Node::_acquire_all</definition>
        <argsstring>(SmallVector&lt; Node * &gt; &amp;)</argsstring>
        <name>_acquire_all</name>
        <qualifiedname>tf::Node::_acquire_all</qualifiedname>
        <param>
          <type><ref refid="classtf_1_1SmallVector" kindref="compound">SmallVector</ref>&lt; Node * &gt; &amp;</type>
          <defname>nodes</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="658" column="8" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="873" bodyend="887"/>
      </memberdef>
      <memberdef kind="function" id="classtf_1_1Node_1a69f967fa92024d7b31cc30d010ccf207" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtf_1_1SmallVector" kindref="compound">SmallVector</ref>&lt; Node * &gt;</type>
        <definition>SmallVector&lt; Node * &gt; tf::Node::_release_all</definition>
        <argsstring>()</argsstring>
        <name>_release_all</name>
        <qualifiedname>tf::Node::_release_all</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="660" column="15" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="890" bodyend="901"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" line="491" column="1" bodyfile="/Users/twhuang/Code/taskflow/taskflow/core/graph.hpp" bodystart="491" bodyend="661"/>
    <listofallmembers>
      <member refid="classtf_1_1Node_1ac5778a60afb44cd54eb0247a04b38a91" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_acquire_all</name></member>
      <member refid="classtf_1_1Node_1a5458c5905ee4b28b70f368a522c198f2" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_data</name></member>
      <member refid="classtf_1_1Node_1a4f549abd6361156430572e57a1f89aec" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_dependents</name></member>
      <member refid="classtf_1_1Node_1a83b494fd50500454e9fb1b8afe8fc65c" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_handle</name></member>
      <member refid="classtf_1_1Node_1a4207c300c6ac0c564deef65c73e1ee96" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_is_cancelled</name></member>
      <member refid="classtf_1_1Node_1aed1c802d5794f881f9c47089003ef62c" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_is_conditioner</name></member>
      <member refid="classtf_1_1Node_1a58f07ec0fb20050fe1d9845ac1d897f6" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_join_counter</name></member>
      <member refid="classtf_1_1Node_1a4a022f2346fe70d56910bd4108dd0e05" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_name</name></member>
      <member refid="classtf_1_1Node_1a20e0970afa16e43872a9a2f8839e9540" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_parent</name></member>
      <member refid="classtf_1_1Node_1a7e6ccc13774475f9ee23af8d37a5311c" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_precede</name></member>
      <member refid="classtf_1_1Node_1a97240d40fe462ab1df97aee10a966965" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_priority</name></member>
      <member refid="classtf_1_1Node_1a69f967fa92024d7b31cc30d010ccf207" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_release_all</name></member>
      <member refid="classtf_1_1Node_1a26a8c9bfbbd1c62dbd49545d9d49a8f4" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_semaphores</name></member>
      <member refid="classtf_1_1Node_1a30ffac5296d61687b8ebb9ff4716a26a" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_set_up_join_counter</name></member>
      <member refid="classtf_1_1Node_1a19bbe02799273a6df9b639d22813f83c" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_state</name></member>
      <member refid="classtf_1_1Node_1a45a3783b67e19091d8e02e5ab56c6b63" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_successors</name></member>
      <member refid="classtf_1_1Node_1ae771748b9bb4f9a01116ddbc31f7bc2d" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>_topology</name></member>
      <member refid="classtf_1_1Node_1a9d5bb66653a9429effed9f13dc7f1603" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>ACQUIRED</name></member>
      <member refid="classtf_1_1Node_1a94a2a7c35bacc662a45912d0dfedff09" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>ASYNC</name></member>
      <member refid="classtf_1_1Node_1a9218d33e5a97519896c687bc2581d4bc" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>AsyncState</name></member>
      <member refid="classtf_1_1Node_1a4b49adbdfc96dddb4e3053f171254a2a" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>CONDITION</name></member>
      <member refid="classtf_1_1Node_1a0d3630fde1342f7efe101fbd112c70a6" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>CONDITIONED</name></member>
      <member refid="classtf_1_1Node_1abfa56b6169772e984e4893380666817d" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>DEPENDENT_ASYNC</name></member>
      <member refid="classtf_1_1Node_1acd2a865b64c7b0feea62f0f50c7116fb" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>DETACHED</name></member>
      <member refid="classtf_1_1Node_1a6b0ac6a07fe2f44d358c1aeb1479a3c5" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>DYNAMIC</name></member>
      <member refid="classtf_1_1Node_1a763b2f90bc53f92d680a635fe28e858e" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>Executor</name></member>
      <member refid="classtf_1_1Node_1a61184f9bd9c801d0a5eccecfdbddc641" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>FlowBuilder</name></member>
      <member refid="classtf_1_1Node_1afab89afd724f1b07b1aaad6bdc61c47a" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>Graph</name></member>
      <member refid="classtf_1_1Node_1a82806fcf9c98e784331b93f47010aefa" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>handle_t</name></member>
      <member refid="classtf_1_1Node_1a2d7a32811951bc382d473d36d34ae66c" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>MODULE</name></member>
      <member refid="classtf_1_1Node_1aaf76a24c53ace59d03fd01b496112e05" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>MULTI_CONDITION</name></member>
      <member refid="classtf_1_1Node_1a0214bc98366d4c24a1cae941cdffe119" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>name</name></member>
      <member refid="classtf_1_1Node_1aebc4701caf53db89d260c75fba0e5050" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>Node</name></member>
      <member refid="classtf_1_1Node_1a7d0d7f09aa1f2fd4d5ec727d91c0c3ba" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>Node</name></member>
      <member refid="classtf_1_1Node_1abbb6a85cc8f62682ce8c78ad9851c0e5" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>num_dependents</name></member>
      <member refid="classtf_1_1Node_1ad5eb7ac6418e89fccc300986b216510c" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>num_strong_dependents</name></member>
      <member refid="classtf_1_1Node_1a7133911e093d82e5f5edd73124b60c6a" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>num_successors</name></member>
      <member refid="classtf_1_1Node_1a7dbe963f0173062f3a6164f1ff581c5a" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>num_weak_dependents</name></member>
      <member refid="classtf_1_1Node_1a53c0636f3e9f8473e564134495a4a615" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>PLACEHOLDER</name></member>
      <member refid="classtf_1_1Node_1a8c001eed6bd8ac9bd348c2f710f9e0b1" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>Placeholder</name></member>
      <member refid="classtf_1_1Node_1ab1ef24ce96fb092597e645f65cc7406a" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>READY</name></member>
      <member refid="classtf_1_1Node_1af3d14e26ba8af9e6cc5a32aad8446de7" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>Runtime</name></member>
      <member refid="classtf_1_1Node_1a2ac09057e2116247343ab716dd7788b0" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>STATIC</name></member>
      <member refid="classtf_1_1Node_1aa48945297ede77a161defc88033ce8a6" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>Subflow</name></member>
      <member refid="classtf_1_1Node_1aaa7728226b6ce66782e8816b1658dd9a" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>Task</name></member>
      <member refid="classtf_1_1Node_1af043dd6f6a359602805d9c7dd7539cca" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>Taskflow</name></member>
      <member refid="classtf_1_1Node_1a0aa0e12e4a0ba023033e808fb2132fdf" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>TaskView</name></member>
      <member refid="classtf_1_1Node_1aa78ccd142a22698289c2c823bfa14241" prot="private" virt="non-virtual"><scope>tf::Node</scope><name>TF_ENABLE_POOLABLE_ON_THIS</name></member>
      <member refid="classtf_1_1Node_1a65026753fe6eaf5c4c904b4437aeecef" prot="public" virt="non-virtual"><scope>tf::Node</scope><name>~Node</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
